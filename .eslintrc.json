{
	"env": {
		"browser": false,
		"node": true,
		"es6": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "./tsconfig.json",
		"sourceType": "module"
	},
	"plugins": [
		"eslint-plugin-prefer-arrow",
		"eslint-plugin-import",
		"@typescript-eslint"
	],
	"ignorePatterns": "*.js",
	"rules": {

		/* ********************************* */
		/* *** Typescript specific rules *** */
		/* ********************************* */

		"@typescript-eslint/adjacent-overload-signatures": "error",
		"@typescript-eslint/array-type": [
			"error",
			{
				"default": "generic"
			}
		],
		"@typescript-eslint/await-thenable": "error",
		"@typescript-eslint/ban-ts-comment": "error",
		"@typescript-eslint/ban-types": "error",
		"@typescript-eslint/class-literal-property-style": ["error", "getters"],
		"@typescript-eslint/consistent-indexed-object-style": "off",
		"@typescript-eslint/consistent-type-assertions": [
			"error",
			{
				"assertionStyle": "as",
				"objectLiteralTypeAssertions": "never"
			}
		],
		"@typescript-eslint/consistent-type-definitions": ["error", "interface"],
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{
				"prefer": "type-imports",
				"disallowTypeAnnotations": true
			}
		],
		"@typescript-eslint/explicit-function-return-type": [
			"error",
			{
				"allowExpressions": false,
				"allowTypedFunctionExpressions": true,
				"allowHigherOrderFunctions": true,
				"allowDirectConstAssertionInArrowFunctions": false,
				"allowConciseArrowFunctionExpressionsStartingWithVoid": false
			}
		],
		"@typescript-eslint/explicit-member-accessibility": [
			"error",
			{
				"accessibility": "explicit"
			}
		],
		"@typescript-eslint/explicit-module-boundary-types": [
			"error",
			{
				"allowArgumentsExplicitlyTypedAsAny": false,
				"allowDirectConstAssertionInArrowFunctions": true,
				"allowHigherOrderFunctions": true,
				"allowTypedFunctionExpressions": true
			}
		],
		"@typescript-eslint/member-delimiter-style": [
			"error",
			{
				"multiline": {
					"delimiter": "semi",
					"requireLast": true
				},
				"singleline": {
					"delimiter": "semi",
					"requireLast": false
				}
			}
		],
		"@typescript-eslint/member-ordering": "error",
		"@typescript-eslint/method-signature-style": ["error", "method"],
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "default",
				"format": ["camelCase"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "variableLike",
				"format": ["snake_case"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "variable",
				"modifiers": ["const"],
				"format": ["UPPER_CASE"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "function",
				"format": ["camelCase"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "typeLike",
				"format": ["PascalCase"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "memberLike",
				"format": ["camelCase"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "memberLike",
				"modifiers": ["static"],
				"format": ["PascalCase"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "property",
				"modifiers": ["static", "readonly"],
				"format": ["UPPER_CASE"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "enumMember",
				"format": ["UPPER_CASE"],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			},
			{
				"selector": "objectLiteralProperty",
				"format": null,
				"leadingUnderscore": "allow",
				"trailingUnderscore": "allow"
			}
		],
		"@typescript-eslint/no-base-to-string": "error",
		"@typescript-eslint/no-confusing-non-null-assertion": "error",
		/*"@typescript-eslint/no-confusing-void-expression": "error",*/
		"@typescript-eslint/no-dynamic-delete": "error",
		"@typescript-eslint/no-empty-interface": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		"@typescript-eslint/no-extraneous-class": [
			"error",
			{
				"allowStaticOnly": true
			}
		],
		"@typescript-eslint/no-floating-promises": "error",
		"@typescript-eslint/no-for-in-array": "error",
		"@typescript-eslint/no-implicit-any-catch": [
			"error",
			{
				"allowExplicitAny": false
			}
		],
		"@typescript-eslint/no-implied-eval": "error",
		"@typescript-eslint/no-inferrable-types": "off",
		"@typescript-eslint/no-invalid-void-type": "error",
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-misused-promises": [
			"error",
			{
				"checksConditionals": true,
				"checksVoidReturn": false
			}
		],
		"@typescript-eslint/no-namespace": "error",
		"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
		"@typescript-eslint/no-non-null-assertion": "error",
		"@typescript-eslint/no-parameter-properties": "error",
		"@typescript-eslint/no-require-imports": "error",
		"@typescript-eslint/no-this-alias": "error",
		"@typescript-eslint/no-type-alias": "off",
		"@typescript-eslint/no-unnecessary-boolean-literal-compare": [
			"error",
			{
				"allowComparingNullableBooleansToTrue": false,
				"allowComparingNullableBooleansToFalse": false
			}
		],
		"@typescript-eslint/no-unnecessary-condition": "error",
		"@typescript-eslint/no-unnecessary-qualifier": "error",
		"@typescript-eslint/no-unnecessary-type-arguments": "off",
		"@typescript-eslint/no-unnecessary-type-assertion": "error",
		"@typescript-eslint/no-unnecessary-type-constraint": "error",
		"@typescript-eslint/no-unsafe-assignment": "error",
		"@typescript-eslint/no-unsafe-call": "error",
		"@typescript-eslint/no-unsafe-member-access": "error",
		"@typescript-eslint/no-unsafe-return": "error",
		"@typescript-eslint/no-var-requires": "error",
		"@typescript-eslint/prefer-as-const": "error",
		"@typescript-eslint/prefer-enum-initializers": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-function-type": "error",
		"@typescript-eslint/prefer-includes": "warn",
		"@typescript-eslint/prefer-literal-enum-member": "error",
		"@typescript-eslint/prefer-namespace-keyword": "error",
		"@typescript-eslint/prefer-nullish-coalescing": [
			"warn",
			{
				"ignoreConditionalTests": true,
				"ignoreMixedLogicalExpressions": true
			}
		],
		/*"@typescript-eslint/prefer-optional-chaining": "error",*/
		"@typescript-eslint/prefer-readonly": "error",
		"@typescript-eslint/prefer-readonly-parameter-types": "off", /* off because of no-param-reassign */
		"@typescript-eslint/prefer-regexp-exec": "error",
		"@typescript-eslint/prefer-string-starts-ends-with": "error",
		"@typescript-eslint/prefer-ts-expect-error": "error",
		"@typescript-eslint/promise-function-async": "error",
		"@typescript-eslint/require-array-sort-compare": "error",
		"@typescript-eslint/restrict-plus-operands": "error",
		"@typescript-eslint/restrict-template-expressions": [
			"error",
			{
				"allowAny": false,
				"allowBoolean": false,
				"allowNumber": false,
				"allowNullish": false
			}
		],
		"@typescript-eslint/strict-boolean-expressions": [
			"error",
			{
				"allowString": true,
				"allowNumber": true,
				"allowNullableString": true,
				"allowNullableNumber": true,
				"allowNullableBoolean": true,
				"allowNullableObject": true,
				"allowAny": false,
				"allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
			}
		],
		"@typescript-eslint/switch-exhaustiveness-check": "error",
		"@typescript-eslint/triple-slash-reference": "error",
		"@typescript-eslint/type-annotation-spacing": [
			"error",
			{
				"before": false,
				"after": true,
				"overrides": {
					"arrow": {
						"before": true,
						"after": true
					}
				}
			}
		],
		"@typescript-eslint/typedef": "error",
		"@typescript-eslint/unbound-method": [
			"error",
			{
				"ignoreStatic": false
			}
		],
		"@typescript-eslint/unified-signatures": "error",

		/* ********************************** */
		/* *** Typescript overrides rules *** */
		/* ********************************** */

		"brace-style": "off",
		"@typescript-eslint/brace-style": [
			"error",
			"allman",
			{
				"allowSingleLine": false
			}
		],
		"comma-dangle": "off",
		"@typescript-eslint/comma-dangle": ["error", "never"],
		"comma-spacing": "off",
		"@typescript-eslint/comma-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		"default-param-last": "off",
		"@typescript-eslint/default-param-last": "error",
		"dot-notation": "off",
		"@typescript-eslint/dot-notation": [
			"error",
			{
				"allowKeywords": true,
				"allowPrivateClassPropertyAccess": false,
				"allowProtectedClassPropertyAccess": false
			}
		],
		"func-call-spacing": "off",
		"@typescript-eslint/func-call-spacing": ["error", "never"],
		"indent": "off",
		"@typescript-eslint/indent": [
			"error",
			"tab",
			{
				"SwitchCase": 1,
				"VariableDeclarator": 1,
				"outerIIFEBody": 1,
				"MemberExpression": 1,
				"FunctionDeclaration": {
					"parameters": 1,
					"body": 1
				},
				"FunctionExpression": {
					"parameters": 1,
					"body": 1
				},
				"CallExpression": {
					"arguments": 1
				},
				"ArrayExpression": 1,
				"ObjectExpression": 1,
				"ImportDeclaration": 1,
				"flatTernaryExpressions": true,
				"offsetTernaryExpressions": true,
				"ignoreComments": true,
				"ignoredNodes": ["SwitchCase > BreakStatement", "ObjectExpression"]
			}
		],
		"init-declarations": "off",
		"@typescript-eslint/init-declarations": ["error", "always"],
		"keyword-spacing": "off",
		"@typescript-eslint/keyword-spacing": [
			"error",
			{
				"before": true,
				"after": true
			}
		],
		"lines-between-class-members": "off",
		"@typescript-eslint/lines-between-class-members":[
			"error",
			{
				"exceptAfterSingleLine": true
			}
		],
		"no-array-constructor": "off",
		"@typescript-eslint/no-array-constructor": "error",
		"no-dupe-class-members": "off",
		"@typescript-eslint/no-dupe-class-members": "error",
		"no-duplicate-imports": "off",
		"@typescript-eslint/no-duplicate-imports": "error",
		"no-empty-function": "off",
		"@typescript-eslint/no-empty-function": [
			"error",
			{
				"allow": ["private-constructors"]
			}
		],
		"no-extra-parens": "off",
		"@typescript-eslint/no-extra-parens": "off",
		"no-extra-semi": "off",
		"@typescript-eslint/no-extra-semi": "error",
		"no-invalid-this": "off",
		"@typescript-eslint/no-invalid-this": "error",
		"no-loop-func": "off",
		"@typescript-eslint/no-loop-func": "error",
		"no-loss-of-precision": "off",
		"@typescript-eslint/no-loss-of-precision": "error",
		"no-magic-numbers": "off",
		"@typescript-eslint/no-magic-numbers": [
			"error",
			{
				"ignore": [0, 1],
				"enforceConst": true,
				"detectObjects": true,
				"ignoreArrayIndexes": false,
				"ignoreDefaultValues": false,
				"ignoreEnums": true,
				"ignoreNumericLiteralTypes": false,
				"ignoreReadonlyClassProperties": true
			}
		],
		"no-redeclare": "off",
		"@typescript-eslint/no-redeclare": [
			"error",
			{
				"builtinGlobals": true,
				"ignoreDeclarationMerge": true
			}
		],
		"no-shadow": "off",
		"@typescript-eslint/no-shadow": [
			"error",
			{
				"builtinGlobals": true,
				"hoist": "all",
				"ignoreTypeValueShadow": false,
				"ignoreFunctionTypeParameterNameValueShadow": false,
				"allow": [
					"closed",
					"devicePixelRatio",
					"event",
					"framesCount",
					"innerHeight",
					"innerWidth",
					"length",
					"name",
					"opener",
					"origin",
					"outerHeight",
					"outerWidth",
					"pageXOffset",
					"pageYOffset",
					"parent",
					"screenLeft",
					"screenTop",
					"screenX",
					"screenY",
					"scrollX",
					"scrollY",
					"status",
					"top",
					"close",
					"minimize",
					"moveBy",
					"moveTo",
					"open",
					"postMessage",
					"resizeBy",
					"resizeTo",
					"restore",
					"scroll",
					"scrollBy",
					"scrollTo",
					"stop"
				]
			}
		],
		"no-throw-literal": "off",
		"@typescript-eslint/no-throw-literal": "error",
		"no-unused-expressions": "off",
		"@typescript-eslint/no-unused-expressions": [
			"error",
			{
				"allowTernary": false,
				"allowShortCircuit": false,
				"allowTaggedTemplates": false
			}
		],
		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": [
			"error",
			{
				"vars": "all",
				"args": "all",
				"ignoreRestSiblings": true,
				"caughtErrors": "none"
			}
		],
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": [
			"error",
			{
				"variables": true,
				"functions": true,
				"classes": true,
				"enums": true,
				"typedefs": true,
				"ignoreTypeReferences": false
			}
		],
		"no-useless-constructor": "off",
		"@typescript-eslint/no-useless-constructor": "error",
		"quotes": "off",
		"@typescript-eslint/quotes": [
			"error",
			"double",
			{
				"avoidEscape": true,
				"allowTemplateLiterals": false
			}
		],
		"require-await": "off",
		"@typescript-eslint/require-await": "error",
		"no-return-await": "off",
		"@typescript-eslint/return-await": ["error", "always"],
		"semi": "off",
		"@typescript-eslint/semi": [
			"error",
			"always",
			{
				"omitLastInOneLineBlock": false
			}
		],
		"space-before-function-paren": "off",
		"@typescript-eslint/space-before-function-paren": [
			"error",
			{
				"named": "never",
				"anonymous": "always",
				"asyncArrow": "always"
			}
		],
		"space-infix-ops": "off",
		"@typescript-eslint/space-infix-ops": [
			"off",
			{
				"int32Hint": false
			}
		],

		/* ******************************* */
		/* *** Javascript rules: error *** */
		/* ******************************* */

		"for-direction": "error",
		"getter-return": "error",
		"no-async-promise-executor": "error",
		"no-await-in-loop": "warn",
		"no-compare-neg-zero": "error",
		"no-cond-assign": ["error", "except-parens"],
		"no-console": "off",
		"no-constant-condition": [
			"error",
			{
				"checkLoops": true
			}
		],
		"no-control-regex": "off",
		"no-debugger": "off",
		"no-dupe-args": "error",
		"no-dupe-else-if": "error",
		"no-dupe-keys": "error",
		"no-duplicate-case": "error",
		"no-empty": [
			"error",
			{
				"allowEmptyCatch": false
			}
		],
		"no-empty-character-class": "error",
		"no-ex-assign": "error",
		"no-extra-boolean-cast": "error",
		"no-func-assign": "error",
		"no-import-assign": "error",
		"no-inner-declarations": "off",
		"no-invalid-regexp": [
			"error",
			{
				"allowConstructorFlags": ["u", "y"]
			}
		],
		"no-irregular-whitespace": [
			"error",
			{
				"skipStrings": false,
				"skipComments": false,
				"skipRegExps": false,
				"skipTemplates": false
			}
		],
		"no-misleading-character-class": "error",
		"no-obj-calls": "error",
		"no-promise-executor-return": "error",
		"no-prototype-builtins": "off",
		"no-regex-spaces": "error",
		"no-setter-return": "error",
		"no-sparse-arrays": "error",
		"no-template-curly-in-string": "error",
		"no-unexpected-multiline": "error",
		"no-unreachable": "error",
		"no-unreachable-loop": "error",
		"no-unsafe-finally": "error",
		"no-unsafe-negation": "error",
		"no-useless-backreference": "error",
		"require-atomic-updates": "error",
		"use-isnan": "error",
		"valid-typeof": [
			"error",
			{
				"requireStringLiterals": true
			}
		],

		/* **************************************** */
		/* *** Javascript rules: best practices *** */
		/* **************************************** */

		"accessor-pairs": [
			"warn",
			{
				"setWithoutGet": true,
				"getWithoutSet": true,
				"enforceForClassMembers": true
			}
		],
		"array-callback-return": [
			"error",
			{
				"allowImplicit": false,
				"checkForEach": true
			}
		],
		"block-scoped-var": "error",
		"class-methods-use-this": "error",
		"complexity": ["error", 50],
		"consistent-return": [
			"error",
			{
				"treatUndefinedAsUnspecified": false
			}
		],
		"curly": [
			"error",
			"all"
		],
		"default-case": "warn",
		"default-case-last": "error",
		"dot-location": ["error", "property"],
		"eqeqeq": [
			"error",
			"always",
			{
				"null": "ignore"
			}
		],
		"grouped-accessor-pairs": ["error", "getBeforeSet"],
		"guard-for-in": "error",
		"max-classes-per-file": ["error", 1],
		"no-alert": "error",
		"no-caller": "error",
		"no-case-declarations": "off",
		"no-constructor-return": "error",
		"no-div-regex": "off",
		"no-else-return": "error",
		"no-empty-pattern": "error",
		"no-eq-null": "off",
		"no-eval": "error",
		"no-extend-native": "off",
		"no-extra-bind": "error",
		"no-extra-label": "error",
		"no-fallthrough": "error",
		"no-floating-decimal": "error",
		"no-global-assign": "error",
		"no-implicit-coercion": "error",
		"no-implicit-globals": "error",
		"no-implied-eval": "error",
		"no-iterator": "error",
		"no-labels": [
			"error",
			{
				"allowLoop": false,
				"allowSwitch": false
			}
		],
		"no-lone-blocks": "error",
		"no-multi-spaces": "error",
		"no-multi-str": "error",
		"no-new": "error",
		"no-new-func": "error",
		"no-new-wrappers": "error",
		"no-octal": "error",
		"no-octal-escape": "error",
		"no-param-reassign": [
			"error",
			{
				"props": false
			}
		],
		"no-proto": "error",
		"no-restricted-properties": "off",
		"no-return-assign": ["error", "always"],
		"no-script-url": "error",
		"no-self-assign": [
			"error",
			{
				"props": true
			}
		],
		"no-self-compare": "error",
		"no-sequences": "error",
		"no-unmodified-loop-condition": "error",
		"no-unused-labels": "error",
		"no-useless-call": "error",
		"no-useless-catch": "error",
		"no-useless-concat": "error",
		"no-useless-escape": "error",
		"no-useless-return": "error",
		"no-void": [
			"error",
			{
				"allowAsStatement": false
			}
		],
		"no-warning-comments": [
			"warn",
			{
				"terms": ["TODO", "FIXME"]
			}
		],
		"no-with": "error",
		"prefer-named-capture-group": "off",
		"prefer-promise-reject-errors": [
			"error",
			{
				"allowEmptyReject": false
			}
		],
		"prefer-regex-literals": [
			"error",
			{
				"disallowRedundantWrapping": true
			}
		],
		"radix": ["warn", "always"],
		"require-unicode-regexp": "off",
		"vars-on-top": "error",
		"wrap-iife": [
			"error",
			"inside",
			{
				"functionPrototypeMethods": true
			}
		],
		"yoda": [
			"error",
			"never",
			{
				"onlyEquality": false,
				"exceptRange": true
			}
		],

		/* ******************************** */
		/* *** Javascript rules: strict *** */
		/* ******************************** */

		"strict": ["error", "never"],

		/* *********************************** */
		/* *** Javascript rules: variables *** */
		/* *********************************** */

		"no-delete-var": "error",
		"no-label-var": "error",
		"no-restricted-globals": "off",
		"no-shadow-restricted-names": "error",
		"no-undef": "off",
		"no-undef-init": "off",
		"no-undefined": "off",

		/* ********************************* */
		/* *** Javascript rules: styling *** */
		/* ********************************* */

		"array-bracket-newline": ["error", "consistent"],
		"array-bracket-spacing": [
			"error",
			"never",
			{
				"singleValue": false,
				"objectsInArrays": false,
				"arraysInArrays": false
			}
		],
		"array-element-newline": [
			"error",
			{
				"multiline": true
			}
		],
		"block-spacing": ["error", "always"],
		"camelcase": "off",
		"capitalized-comments": "off",
		"comma-style": ["error", "last"],
		"computed-property-spacing": ["error", "never"],
		"consistent-this": ["error", "self"],
		"eol-last": ["error", "always"],
		"func-name-matching": [
			"error",
			"always",
			{
				"considerPropertyDescriptor": true,
				"includeCommonJSModuleExports": false
			}
		],
		"func-names": [
			"error",
			"never",
			{
				"generators": "never"
			}
		],
		"func-style": [
			"error",
			"declaration",
			{
				"allowArrowFunctions": true
			}
		],
		"function-call-argument-newline": ["error", "consistent"],
		"function-paren-newline": ["error", "multiline-arguments"],
		"id-denylist": ["error", "e", "ev", "err", "ex", "cb", "fn", "obj"],
		"id-length": [
			"error",
			{
				"min": 4,
				"max": 50,
				"properties": "always",
				"exceptionPatterns": [
					"^\\w$",
					"^key$",
					"^KEY$",
					"^url$",
					"^URL$",
					"^Job$"
				]
			}
		],
		"id-match": "off",
		"implicit-arrow-linebreak": "off",
		"key-spacing": [
			"error",
			{
				"beforeColon": false,
				"afterColon": true,
				"mode": "strict"
			}
		],
		"line-comment-position": ["error", "above"],
		"linebreak-style": ["error", "unix"],
		"lines-around-comment": "off",
		"max-depth": ["error", 7],
		"max-len": [
			"error",
			{
				"code": 200,
				"tabWidth": 4,
				"comments": 150,
				"ignoreComments": false,
				"ignoreTrailingComments": false,
				"ignoreUrls": false,
				"ignoreStrings": false,
				"ignoreRegExpLiterals": false,
				"ignoreTemplateLiterals": false
			}
		],
		"max-lines": [
			"error",
			{
				"max": 1000,
				"skipBlankLines": true,
				"skipComments": true
			}
		],
		"max-lines-per-function": [
			"error",
			{
				"max": 100,
				"skipBlankLines": true,
				"skipComments": true,
				"IIFEs": true
			}
		],
		"max-nested-callbacks": ["error", 3],
		"max-params": ["error", 4],
		"max-statements": [
			"error",
			50,
			{
				"ignoreTopLevelFunctions": false
			}
		],
		"max-statements-per-line": [
			"error",
			{
				"max": 1
			}
		],
		"multiline-comment-style": "off",
		"multiline-ternary": ["error", "never"],
		"new-cap": [
			"error",
			{
				"newIsCap": true,
				"capIsNew": true,
				"properties": false
			}
		],
		"new-parens": ["error", "always"],
		"newline-per-chained-call": [
			"error",
			{
				"ignoreChainWithDepth": 2
			}
		],
		"no-bitwise": "off",
		"no-continue": "off",
		"no-inline-comments": "error",
		"no-lonely-if": "warn",
		"no-mixed-operators": "error",
		"no-mixed-spaces-and-tabs": "error",
		"no-multi-assign": "error",
		"no-multiple-empty-lines": [
			"error",
			{
				"max": 1,
				"maxEOF": 1,
				"maxBOF": 0
			}
		],
		"no-negated-condition": "error",
		"no-nested-ternary": "error",
		"no-new-object": "error",
		"no-plusplus": "off", /* See space-unary-ops */
		"no-restricted-syntax": [
			"error",
			{
				"selector": "CallExpression[callee.type=FunctionExpression]",
				"message": "IIFEs are not allowed."

			},
			{
				"selector": "CallExpression[callee.type=ArrowFunctionExpression]",
				"message": "IIFEs are not allowed."
			},
			{
				"selector": "MethodDefinition[kind=get]",
				"message": "Create a proper getter method."
			},
			{
				"selector": "MethodDefinition[kind=set]",
				"message": "Create a proper setter method."
			}
		],
		"no-tabs": [
			"error",
			{
				"allowIndentationTabs": true
			}
		],
		"no-ternary": "off",
		"no-trailing-spaces": [
			"error",
			{
				"skipBlankLines": false,
				"ignoreComments": false
			}
		],
		"no-underscore-dangle": [
			"error",
			{
				"allowAfterThis": false,
				"allowAfterSuper": false,
				"allowAfterThisConstructor": false,
				"enforceInMethodNames": true,
				"allowFunctionParams": false
			}
		],
		"no-unneeded-ternary": [
			"error",
			{
				"defaultAssignment": false
			}
		],
		"no-whitespace-before-property": "error",
		"nonblock-statement-body-position": ["error", "beside"],
		"object-curly-newline": [
			"error",
			{
				"ObjectExpression": { "consistent": true, "multiline": true },
				"ObjectPattern": { "consistent": true, "multiline": true },
				"ImportDeclaration": { "consistent": true, "multiline": true },
				"ExportDeclaration": { "consistent": true, "multiline": true }
			}
		],
		"object-curly-spacing": ["error", "always"],
		"object-property-newline": [
			"error",
			{
				"allowAllPropertiesOnSameLine": true
			}
		],
		"one-var": ["error", "never"],
		"one-var-declaration-per-line": ["error", "always"],
		"operator-assignment": "off",
		"operator-linebreak": ["warn", "before"],/*["error", "around", { "overrides": { "?": "before", ":": "before" }],*/
		"padded-blocks": ["error", "never"],
		"padding-line-between-statements": [
			"error",
			{
				"blankLine": "any",
				"prev": "*",
				"next": "*"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "return"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "throw"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "case"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "default"
			},
			{
				"blankLine": "always",
				"prev": "break",
				"next": "*"
			},
			{
				"blankLine": "always",
				"prev": "continue",
				"next": "*"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "block-like"
			},
			{
				"blankLine": "always",
				"prev": "block-like",
				"next": "*"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "multiline-expression"
			},
			{
				"blankLine": "always",
				"prev": "multiline-expression",
				"next": "*"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "class"
			},
			{
				"blankLine": "always",
				"prev": "class",
				"next": "*"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "function"
			},
			{
				"blankLine": "always",
				"prev": "function",
				"next": "*"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "switch"
			},
			{
				"blankLine": "always",
				"prev": "switch",
				"next": "*"
			},
			{
				"blankLine": "always",
				"prev": "*",
				"next": "export"
			},
			{
				"blankLine": "always",
				"prev": "import",
				"next": "*"
			},
			{
				"blankLine": "any",
				"prev": "export",
				"next": "export"
			},
			{
				"blankLine": "any",
				"prev": "import",
				"next": "import"
			}
		],
		"prefer-exponentiation-operator": "off",
		"prefer-object-spread": "error",
		"quote-props": ["error", "as-needed"],
		"semi-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		"semi-style": ["error", "last"],
		"sort-keys": "off",
		"sort-vars": "off",
		"space-before-blocks": ["error", "always"],
		"space-in-parens": ["error", "never"],
		"space-unary-ops": [
			"error",
			{
				"words": true,
				"nonwords": false
			}
		],
		"spaced-comment": "off",
		"switch-colon-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		"template-tag-spacing": ["error", "always"],
		"unicode-bom": ["error", "never"],
		"wrap-regex": "off",

		/* ***************************** */
		/* *** Javascript rules: es6 *** */
		/* ***************************** */

		"arrow-body-style": ["error", "always"],
		"arrow-parens": ["error", "always"],
		"arrow-spacing": [
			"error",
			{
				"before": true,
				"after": true
			}
		],
		"constructor-super": "error",
		"generator-star-spacing": [
			"error",
			{
				"named": {
					"before": false,
					"after": true
				},
				"anonymous": {
					"before": false,
					"after": false
				},
				"method": {
					"before": true,
					"after": true
				}
			}
		],
		"no-class-assign": "error",
		"no-confusing-arrow": [
			"error",
			{
				"allowParens": true
			}
		],
		"no-const-assign": "error",
		"no-new-symbol": "error",
		"no-restricted-exports": "off",
		"no-restricted-imports": "off",
		"no-this-before-super": "error",
		"no-useless-computed-key": [
			"error",
			{
				"enforceForClassMembers": true
			}
		],
		"no-useless-rename": [
			"error",
			{
				"ignoreDestructuring": false,
				"ignoreImport": false,
				"ignoreExport": false
			}
		],
		"no-var": "error",
		"object-shorthand": ["error", "never"],
		"prefer-arrow-callback": [
			"error",
			{
				"allowNamedFunctions": false,
				"allowUnboundThis": false
			}
		],
		"prefer-const": [
			"error",
			{
				"destructuring": "any",
				"ignoreReadBeforeAssign": true
			}
		],
		"prefer-destructuring": "off",
		"prefer-numeric-literals": "error",
		"prefer-rest-params": "error",
		"prefer-spread": "error",
		"prefer-template": "error",
		"require-yield": "error",
		"rest-spread-spacing": ["error", "never"],
		"sort-imports": "off",
		"symbol-description": "error",
		"template-curly-spacing": ["error", "never"],
		"yield-star-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],

		/* ********************* */
		/* *** Other plugins *** */
		/* ********************* */

		"import/no-default-export": "error",
		"import/no-deprecated": "error",
		"import/no-unassigned-import": "error",
		"import/order": "error",
		"prefer-arrow/prefer-arrow-functions": [
			"error",
			{
				"allowStandaloneDeclarations": true
			}
		]
	}
}
